First Year Project: Session 2.

Now I have given you two new files, one corresponding to signal and one to background. Now the selection of the most appropriate mu+tau pair has been done for you. The branches in the tree and an explanation of what they contain is listed below:

"event" - event number
"wt" - an event weight - you dont need to worry about this
"mpt_1" - selected muon pt
"tpt_1" - selected tau pt
"meta_1" - selected muon eta
"teta_1" - selected tau eta
"mphi_1" - selected muon phi
"tphi_1" - selected tau phi
"mE_1" - selected muon energy
"tE_1" - selected tau energy
"mq_1" - selected muon charge
"tq_1" - selected tau charge
"mdxy_1" - impact parameter in xy of muon
"tdxy_1" - impact parameter in xy of tau
"mdz_1" - impact parameter in z of muon
"tdz_1" - impact parameter in z of tau
"miso_1" - isolation of muon
"tiso_1" - isolation of tau
"dphi" - delta phi - difference in phi angle between muon and tau
"deta" - delta eta - difference in eta angle between muon and tau
"m_vis" - invariant mass of mu+tau
"pt_tt" - di-tau pt
"mt_2" - transverse mass between tau and MET
"mt_1" - transverse mass between muon and MET
"met" - missing energy
"n_jets" - number of jets in the event
"n_bjets" - number of b-tagged jets in the event (likely to have come from a b-quark)
"jpt_1" - leading jet pt
"jeta_1" - leading jet eta
"jphi_1" - leading jet phi
"bpt_1" - leading b-jet pt
"beta_1" - leading b-jet eta
"bphi_1" - leading b-jet phi

Try making some plots of some of these quantities by running over signal and background separately. The next task would be to save each of the signal and background histograms to a root file, so that you can then write a script to open them both up and plot them on top of each other. See if you can figure out how you would do this using examples on the root webpages, and if necessary I will give you an example script.

The files can be found in the Step2 folder in my public area. For the high mass "extra Higgs boson" project, use:  SUSYGluGluToBBHToTauTau_M-700 for signal and WJetsToLNu-LO for background. For the "Standard Model" Higgs boson use VBFHToTauTau_M-125 for signal and DYJetsToLL_M-50-LO-ext for background.

An example of a ROOT macro to overlay the two plots can be found in this folder plot_macro.C. To run this macro, place it in the same place as you have been storing your Analysis.C and Analysis.h. Then from within root the command to run it is:

.x <PATHTOMACRO>/plot_macro.C

Elaborate on this script to make plots overlaying signal and background for all of the above variables. You may find it helpful to normalise the histograms to unit area, which can be done making use of ->Scale() and ->Integral() functions. This allows you to compare just the shapes of the variables rather than the overall normalisation. 

Which variables do you find show good discrimination between signal and background? Which show poor discrimination?

Once you have worked out some variables which show good discrimination between signal and background, you can think about some sort of selection based on these variables which will select a large fraction of signal compared to rejecting background. For example say you found the mu-tau mass looks quite different between signal and background. Is the value generally higher for signal or background? This could motivate selecting events which have m_vis > some value or < some value, depending on which direction collects the most signal. This is what i mean when i refer to a "cut"

To try out some selection of cuts by putting an "if" statement inside the event loop, i.e. only fill your histograms if they pass some selection. Then you can use your plot macro or some similar code to look at the created histograms. This time, instead of normalising both histograms to 1 and overlaying them, keep the nromasalition since this includes the information about the fraction of signal and background which is lost by cutting. Instead, print to screen the value of signal/sqrt(background). This is a measure of the "significance" of your cuts. Calculate the significance of the cuts for the following cases:
- No cuts, so whatever is already in the tree files
- One cut, on whatever you think is your best discriminating variable
- 2 or more cuts, using a combination of a few variables

You can now try comparing this to the result of a multivariate analysis done by a computer for you. (NOTE: I havent tested this on the Windows machines yet, but I am informed it should work). I have created a script for you called ClassTest.C (in this directory). It is a long a complex script, but all you need to note is:
 - Lines 183-188 list the variables you want it to try and use to try cuts on
 - Lines 204 and 206 list the names of the files containing the trees for signal and background
 - The file lists lots of different possible minimisation methods, but I have left only one turned on which is called "Boosted Decision Tree", or BDT

 To run the script, simply proceed like when you run the plot macro, and do:
.x <PATHTOMACRO>/ClassTest.C

This will take a few minutes to run, and print a lot of information to screen. One thing to look out for is a line which begins:

--- Factory                  : Ranking input variables (method specific)...
--- BDT                      : Ranking result (top variable is best ranked)

This will then tell you which variables the BDT thinks are the most useful for discriminating. How does this compare to what you found from the overlay plots.

Finally I prepared a script for you which can be used to analyse the output. The result of the minimisation is to calculate a BDT discriminator value for signal and background. You can then have a look at how well you could distinguish signal and background from cuting on this discriminator, and compare to your attempts with the individual variables. 

The discriminator is stored in the output file from the ClassTest.C macro, which is called Test_BDT.root. Unfortunately the BDT discriminator plots are normalised to the same area, so we have to undo this and scale back to the original area to calculate values of S/root(B) to compare with the ones you calcualted earlier. I have done an example of this for you in TMVA_tester.C. Note lines 14 and 15 need to contain the integrals of the signal and background histograms before any cuts are applied - this example contains the numbers for the VBF signal and DYJets background, you will need different numbers for the other example. 

Run the TMVA_tester.C macro and compare the value it prints out with the numbers you calculated earlier with your own attempt at cuts.

